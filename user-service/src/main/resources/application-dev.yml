server:
  port: 8080
  servlet:
    context-path: /api
spring:
  application:
    name: "AutoHub User Service"
  datasource:
    url: jdbc:postgresql://localhost:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 600000
      max-lifetime: 1800000
  jpa:
    hibernate:
      ddl-auto: validate  # Use 'validate' not 'update' when using Flyway
  flyway:
    url: jdbc:postgresql://localhost:${DB_PORT}/${DB_NAME}
    user: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: autohub
    default-schema: autohub
    clean-disabled: false
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH2_GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${OAUTH2_GOOGLE_CLIENT_SECRET:your-google-client-secret}
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            client-id: ${OAUTH2_FACEBOOK_CLIENT_ID:your-facebook-client-id}
            client-secret: ${OAUTH2_FACEBOOK_CLIENT_SECRET:your-facebook-client-secret}
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
  mail:
    host: localhost
    port: 25
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false

application:
  jwt:
    secret-key: ${JWT_SECRET_KEY}
    token-validity-in-seconds: ${JWT_VALIDITY:86400}
    redirect-uri: ${OAUTH2_REDIRECT_URI:http://localhost:3000/oauth2/redirect}

logging:
  level:
    org.flywaydb: DEBUG
    org.springframework.security: DEBUG
    org.springframework.context.support: DEBUG

app:
  mail:
    from: noreply@autohub.com
  url: https://autohub.com
