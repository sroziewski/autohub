[versions]
# Plugins
spring-boot = "3.4.5"
spring-dependency-management = "1.1.7"
flyway = "9.16.0"
buildconfig = "3.1.0"

# JWT
jjwt = "0.11.5"

# TOTP for 2FA
aerogear-otp = "1.0.0"

# Rate Limiting
bucket4j = "7.6.0"

# Resilience4j
resilience4j = "2.2.0"

# TestContainers
testcontainers = "1.19.3"
postgresql = "42.6.0"

# MapStruct
mapstruct = "1.5.5.Final"
lombok-mapstruct-binding = "0.2.0"

# Validation
commons-validator = "1.7"

[libraries]
# JWT dependencies
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }

# TestContainers dependencies
testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
postgresql-driver = { module = "org.postgresql:postgresql", version.ref = "postgresql" }

# MapStruct dependencies
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
lombok-mapstruct-binding = { module = "org.projectlombok:lombok-mapstruct-binding", version.ref = "lombok-mapstruct-binding" }

# Validation dependencies
commons-validator = { module = "commons-validator:commons-validator", version.ref = "commons-validator" }

# TOTP dependencies
aerogear-otp = { module = "org.jboss.aerogear:aerogear-otp-java", version.ref = "aerogear-otp" }

# Rate limiting dependencies
bucket4j-core = { module = "com.github.vladimir-bukhtoyarov:bucket4j-core", version.ref = "bucket4j" }
bucket4j-jcache = { module = "com.github.vladimir-bukhtoyarov:bucket4j-jcache", version.ref = "bucket4j" }

# Resilience4j dependencies
resilience4j-spring-boot3 = { module = "io.github.resilience4j:resilience4j-spring-boot3", version.ref = "resilience4j" }
resilience4j-circuitbreaker = { module = "io.github.resilience4j:resilience4j-circuitbreaker", version.ref = "resilience4j" }
resilience4j-retry = { module = "io.github.resilience4j:resilience4j-retry", version.ref = "resilience4j" }
resilience4j-timelimiter = { module = "io.github.resilience4j:resilience4j-timelimiter", version.ref = "resilience4j" }

[bundles]
jwt = ["jjwt-api", "jjwt-impl", "jjwt-jackson"]
testcontainers = ["testcontainers-core", "testcontainers-junit", "testcontainers-postgresql"]
mapstruct = ["mapstruct"]
bucket4j = ["bucket4j-core", "bucket4j-jcache"]
resilience4j = ["resilience4j-spring-boot3", "resilience4j-circuitbreaker", "resilience4j-retry", "resilience4j-timelimiter"]
totp = ["aerogear-otp"]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway" }
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig" }
